name: Deploy Mech-Evolve to Production

on:
  push:
    branches:
      - main
      - feat/dynamic-agent-system
  workflow_dispatch:

env:
  SERVICE_NAME: mech-evolve
  SERVICE_PORT: 3011
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/mech-evolve

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build TypeScript
        run: npm run build
      
      - name: Run tests
        run: npm test || echo "Tests not configured"
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          platforms: linux/amd64
      
      - name: Deploy notification
        run: |
          echo "‚úÖ Docker image pushed successfully"
          echo "Image: ${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "Ready for deployment to production server"

  deploy-to-production:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: 22
          script: |
            # Pull the latest image
            docker pull ${{ env.IMAGE_NAME }}:latest
            
            # Stop existing container
            docker stop mech-evolve || true
            docker rm mech-evolve || true
            
            # Start new container
            docker run -d \
              --name mech-evolve \
              --restart unless-stopped \
              -p 3011:3011 \
              -e NODE_ENV=production \
              -e PORT=3011 \
              -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
              -e SERVICE_NAME=mech-evolve \
              -e SERVICE_URL=https://evolve.mech.is \
              -e CORS_ORIGINS="https://mech.is,https://evolve.mech.is,https://api.mech.is" \
              -e LOG_LEVEL=info \
              ${{ env.IMAGE_NAME }}:latest
            
            # Wait for health check
            sleep 10
            curl -f http://localhost:3011/health || exit 1
            
            echo "‚úÖ Mech-evolve deployed successfully!"

  verify-deployment:
    needs: deploy-to-production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Verify service health
        run: |
          echo "Checking service health..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://evolve.mech.is/health)
          
          if [ "$response" = "200" ]; then
            echo "‚úÖ Service is healthy and responding"
          else
            echo "‚ùå Service health check failed with status: $response"
            exit 1
          fi
      
      - name: Test API endpoints
        run: |
          echo "Testing API documentation endpoint..."
          curl -f https://evolve.mech.is/api/docs || exit 1
          
          echo "Testing evolution tracking endpoint..."
          curl -X POST https://evolve.mech.is/api/evolution/track \
            -H "Content-Type: application/json" \
            -d '{"projectId":"test","changeType":"test","filePath":"/test.js","description":"Deployment test"}' \
            || exit 1
          
          echo "‚úÖ All API endpoints responding correctly"
      
      - name: Deployment summary
        run: |
          echo "üéâ Deployment Complete!"
          echo "Service: mech-evolve"
          echo "URL: https://evolve.mech.is"
          echo "Health: https://evolve.mech.is/health"
          echo "API Docs: https://evolve.mech.is/api/docs"
          echo "Version: ${{ github.sha }}"