version: '3.8'

services:
  mech-evolve:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    image: mech-evolve:latest
    container_name: mech-evolve-service
    restart: unless-stopped
    ports:
      - "3011:3011"
    environment:
      - NODE_ENV=production
      - PORT=3011
      - MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017/mech-evolve}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MECH_EVOLVE_URL=${MECH_EVOLVE_URL:-http://localhost:3011}
    volumes:
      - mech-evolve-data:/app/data
      - mech-evolve-logs:/app/logs
    networks:
      - mech-network
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3011/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 3s
      retries: 3

  mongodb:
    image: mongo:7-jammy
    container_name: mech-evolve-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=mech-evolve
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    networks:
      - mech-network
    ports:
      - "27017:27017"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: mech-evolve-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - mech-network
    depends_on:
      - mech-evolve
    profiles:
      - production

volumes:
  mech-evolve-data:
    driver: local
  mech-evolve-logs:
    driver: local
  mongodb-data:
    driver: local
  mongodb-config:
    driver: local

networks:
  mech-network:
    driver: bridge